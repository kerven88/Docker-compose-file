[request_definition]
r = sub, obj, act, dom
#   sub:  user__UID  or  role__ROLE_NAME;  # obj: app__AID, etc. # act: 'edit' or 'view'.  # dom: like 'ent__EntId'
#   note, please using "__" as separation flag in 'sub', 'obj' or 'dom' to separate sub-parts.
#   Do not use "::" , "@" or "|" as separation flag.
[policy_definition]
# Policy with domain (e.g. p, role__admin__app__111, app__111, edit, ent__1 )
p = sub, obj, act, dom

[role_definition]
# User_role_with_domain (e.g. g, user__181, role__admin__app__111, ent__1)
g = _, _, _
# Resource role (e.g. g2, app__111, Obj__GroupRole)
g2 = _, _
# User_role_without_domain (e.g. g3, user__181, role__root)
g3 = _, _

[policy_effect]
e = some(where (p.eft == allow))

[matchers]
m = (g(r.sub, p.sub, r.dom) || g3(r.sub, p.sub)) \
&& (g2(r.obj, p.obj) || keyMatch(r.obj, p.obj) || keyMatch2(r.obj, p.obj)) \
&& keyMatch(r.dom, p.dom) \
&& (p.act == 'edit' && r.act == 'view' || keyMatch(r.act, p.act) || keyMatch2(r.act, p.act)) \
|| (g3(r.sub, p.sub) && p.sub == "role__root")
